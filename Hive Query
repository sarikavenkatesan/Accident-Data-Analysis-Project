set hive.execution.engine=mr/tez;

INSERT OVERWRITE TABLE min_max_avg_spot_prices_usa
SELECT a_max.instance_type,
       a_max.availability_zone,
       a_max.max_spot_price,
       a_max.date_time AS max_sp_date_time,
       b_min.min_spot_price,
       b_min.date_time AS min_sp_date_time,
       CAST(a_max.avg_spot_price AS DECIMAL(6,3)) AS avg_spot_price
FROM
(SELECT a.* FROM
 (SELECT instance_type, 
         availability_zone,
         date_time,
         FIRST_VALUE(spot_price) OVER (PARTITION BY instance_type, availability_zone ORDER BY spot_price DESC) AS max_spot_price,
         AVG(CAST(spot_price AS DOUBLE)) OVER (PARTITION BY instance_type, availability_zone) AS avg_spot_price,
         ROW_NUMBER() OVER (PARTITION BY instance_type, availability_zone ORDER BY spot_price DESC) AS max_row_number
FROM historical_spot_prices) a
WHERE a.max_row_number = 1 AND a.availability_zone LIKE 'us%') a_max
JOIN
(SELECT b.* FROM 
 (SELECT instance_type, 
         availability_zone,
         date_time,
         MIN(spot_price) OVER (PARTITION BY instance_type, availability_zone) AS min_spot_price,
         ROW_NUMBER() OVER (PARTITION BY instance_type, availability_zone ORDER BY spot_price ASC) AS min_row_number
FROM historical_spot_prices) b
WHERE b.min_row_number = 1 AND b.availability_zone LIKE 'us%') b_min
ON (a_max.instance_type = b_min.instance_type
    AND a_max.availability_zone = b_min.availability_zone)
ORDER BY a_max.instance_type, a_max.availability_zone;
